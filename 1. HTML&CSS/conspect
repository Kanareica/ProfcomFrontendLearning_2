List of tags:
1) <strong> - парный тэг для выделения текста жирным(дублирует тэг <b>, который выходит из употребления)
2) <meta> - одиночный тэг для установки параметров страницы
2) <em> - парный тэг для выделения текста курсивом(дублирует тэг <i>, который выходит из употребления)
3) <br> - одиночный тэг для переноса строки
4) <hr> - одиночный тэг, горизонтальная черта в этой части страницы
5) <!-- "space for comment" --> - комментарий
6) <p> -   парный тэг для создания параграфов(деления на текста на странице, например)
7) <h"1-6"> - парный тэг для выделения текста, как заголовка первого-шестого уровня
8) <article> - парный тэг, независимая часть контента, которая имеет свой заголовок(обязательно по стилистике)
9) <section> - парный тэг, часть сайта, которая содержит часть информации, может содержать заголовки, в отличии от <article> потеряет смысл/контекст
10) <naw> - парный тэг, навигационные разделы сайта(например меню)
11) <header> - парный тэг, пояснение, вводная часть
12) <main> - парный тэг, основное содержание страницы/сайта
13) <footer> - парный тэг, нижняя часть страницы(чаще всего статична)
14) <ul>, <ol> - тэг для нумерованного и маркированного списка
15) <table> - парный тэг, для работы с таблицами
16) <div> - парный тэг, универсальный контейнер(раньше заменял все специальные тэги)
17) <img> - одинарный тэг для контентного изображения. Атрибуты, которые влияют на стиль лучше не использовать.
18) <a> - парный тэг, ссылка, можно переходить к определённому месту на данной странице(через якоря,id)
20) <button> - одинарный тэг, кнопка
21) <span> - одинарный тэг, похож на <div>, но не может содержать в себе другие тэги
22) <form> - парный тэг, форма на страницы для обмена данными с пользователем с атрибутами:
    a) accept-charset - устанавливает кодировку, в которой сервер может принимать и обрабатывать данные
    b)  action - адрес программы или документа, который обрабатывает данные формы
    c)  autocomplete - включает автозаполнение полей формы
    d)  enctype - способ кодирования данных формы
    e)  method - метод протокола HTTP
    f)  name - имя формы
    g)  novalidate - отменяет встроенную проверку данных формы на корректность ввода
    h)  target - имя окна или фрейма, куда обработчик будет загружать возвращаемый результат
23) <input> - одинарный тэг, один из разносторонних элементов формы, обеспечивает взаимодействие с пользователем. Поддерживает тэги:
    a) accept - устанавливает фильтр на типы файлов, которые вы можете отправить через поле загрузки файлов
    b) accesskey - переход к элементу с помощью комбинации клавиш
    c) align - определяет выравнивание изображения
    d) alt - альтернативный текст для кнопки с изображением
    e) autocomplete - включает или отключает автозаполнение
    f) autofocus - устанавливает фокус в поле формы
    g) border - толщина рамки вокруг изображения
    h) checked - предварительно активированный переключатель или флажок
    i) disabled - блокирует доступ и изменение элемента
    j) form - связывает поле с формой по её идентификатору
    k) formaction - определяет адрес обработчика формы
    l) formenctype - устанавливает способ кодирования данных формы при их отправке на сервер
    m) formmethod - сообщает браузеру каким методом следует передавать данные формы на сервер
    n) formnovalidate - отменяет встроенную проверку данных на корректность
    o) formtarget - определяет окно или фрейм в которое будет загружаться результат, возвращаемый обработчиком формы
    p) list - указывает на список вариантов, которые можно выбирать при вводе текста
    q) max - верхнее значение для ввода числа или даты
    r) maxlength - максимальное количество символов разрешенных в тексте
    s) min - нижнее значение для ввода числа или даты
    t) multiple - позволяет загрузить несколько файлов одновременно
    u) name - имя поля, предназначено для того, чтобы обработчик формы мог его идентифицировать
    v) pattern - устанавливает шаблон ввода
    w) placeholder - выводит подсказывающий текст
    x) readonly - устанавливает, что поле не может изменяться пользователем
    y) required - обязательное для заполнения поле
    z) size ширина текстового поля
    aa) src - адрес графического файла для поля с изображением
    ab) step - шаг приращения для числовых полей
    ac) tabindex - определяет порядок перехода между элементами с помощью клавиши Tab
    ad) type - сообщает браузеру, к какому типу относится элемент формы
    ae) value - значение элемента
24) <style> - парный тэг, один из 3 способов работы с css


name_of_attribute="value_of_attribute"
list of attribute:
1) id - уникальный номер элемента страницы
2) class - класс, к которому относится данный элемент страницы
3) style - стиль данного элемента страницы
4) lang - язык страницы
5) charset - установить используемую кодировку(например utf-8)
6) accesskey - активировать ссылку нажатием на заданную в коде букву или цифру
7) contenteditable - ставит флаг, может ли пользователь редактировать контент
8) contextmenu - устанавливает контекстное меню, по id
9) dir - задаёт направление вывода текста(справа-налево или слева-направо)
10) draggable - позволяет перетаскивать элемент для дальнейшего манипулирования с ним
11) dropzone - указывает, что делать с перетаскиваемым элементом
12) hidden - скрывает содержимое для просмотра, но доступен через скрипты
13) spellcheck - указывает проверять ли грамматику или нет
14) tabindex - указывает порядок получения фокуса при использовании tab
15) title - создаёт всплывающую текстовую подсказку при наведении курсора
16) translate - если укать no, то будет защищено от перевода страницы(например в Я.Браузере)
17) атрибуты для обработки событий:
    a) onblur - потеря фокуса
    b) onchange - изменение значения элемента формы
    c) onclick - щелчок левой кнопкой мыши на элементе
    d) ondblclick - двойной щелчок левой кнопкой мыши на элементе
    e) onfocus - получение фокуса
    f) onkeydown - клавиша нажата, но не отпущена
    g) onkeypress - клавиша нажата и отпущена
    h) onkeyup - клавиша отпущена
    i) onload - документ загружен
    j) onmousedown - нажата левая кнопка мыши
    k) onmousemove - перемещение курсора мыши
    l) onmouseout - курсор покидает элемент
    m) onmouseover - курсор наводится на элемент
    n) onmouseup - левая кнопка мыши отпущена
    o) onreset - форма очищена
    p) onselect - выделен текст в поле формы
    q) onsubmit - форма отправлена
    r) onunload - закрытие окна
18) data-"name of attribute" - свои тэги по названию, можно использовать для подсказок при наведении на избражение
19) alt - альтернатива, если была ошибка в выводе изображения
20) colspan - слияние n ячеек в строке
21) rowspan - слияние n ячеек в колонке
22) span - в colgroup объединяет ячейки для стилей и т.п.

Псевдоклассы и псевдоэлементы:
1) Форматирование ссылок:
a:"псевдокласс"
    1) создать ссылку
    2) основные псевдоклассы для ссылок:
        a) link - указывает ссылку, на которую не нажимали(выделяют)
        b) visited - уже посещённая ссылка
        c) hover - при наведении курсора на ссылку
        d) active - срабатывает в момент нажатия на ссылку
    3) менять стили по усмотрению
2) Форматирование параграфов:
p:"псевдокласс\псевдоэлемент"
    1) создать абзац
    2) основные псевдоэлементы для параграфов:
        a) first-letter - первая буква в параграфе
        b) first-line - первая строка в параграфе
    3) менять стили по умолчанию
3) focus - псевдокласс для form, например. То где сейчас работает пользователь (для Mozila лучше писать ::)
4) before - псевдоэлемент, который позволяет создать сообщение перед указанными элементами(добавляется в этот элемент, но ему не принадлежит, добавляется в момент отображения страницы)
5) after - псевдоэлемент, аналогичен before, но добавляется в конце
6) selection - псевдокласс, срабатывает в момент выделения текста на странице(с двумя :)

Работа с css:
1) Можно делать внутренние(padding) и внешние(margin) отступы
2) работа с цветом с помощью rgba наиболее удобная(для меня)
3) border-bottom - толщина тип цвет
4) radius - скругление

В html сыновья наследуют стили css у предков, чем ближе предок, тем приорететней его стили.
Если у елемента есть свои стили, то они в приоретете.
Список свойств, которые не наследуются:
1) align + различные вариации
2) max + различные вариации
3) margin + разные вариации
4) padding + разные вариации

Сброс css для страницы
list of new tags:
1) iframe -  создает плавающий фрейм, который находится внутри обычного документа, он позволяет загружать в область заданных размеров любые другие независимые документы(например видеоролик с другого сайта)
2) blockquote - предназначен для выделения длинных цитат внутри документа. Отдельный блок.
3) pre -  определяет блок предварительно форматированного текста.
4) abbr - указывает, что последовательность символов является аббревиатурой
5) acronym - указывает на то, что текст является акронимом.
6) address - предназначен для хранения информации об авторе и может включать в себя любые элементы HTML вроде ссылок, текста, выделений и т.д.
7) big - увеличивает размер шрифта на единицу по сравнению с обычным текстом.
8) small - уменьшает размер шрифта на единицу по сравнению с обычным текстом.
9) code - предназначен для отображения одной или нескольких строк текста, который представляет собой программный код.
10) del - используется для выделения текста, который был удален в новой версии документа.
11) dfn - применяется для выделения терминов при их первом появлении в тексте.
12) em - предназначен для акцентирования текста.
13) ins - предназначен для выделения текста, который был добавлен в новую версию документа.
14) kbd - используется для обозначения текста, который набирается на клавиатуре или для названия клавиш.
15) q - используется для выделения в тексте цитат.
16) s/strike - отображает текст как перечеркнутый.
17) samp - используется для отображения текста, который является результатом вывода компьютерной программы или скрипта.
18) cite - помечает текст как цитату или сноску на другой материал.
19) figure - Используется для группирования любых элементов, например, изображений и подписей к ним.

Необходимо сбрасывать стили по умолчанию, чтобы не помешали вёрстке с готовым дизайном.
Все отступы на 0
Убрать границы
Размер шрифта 100%
Вертикальное выравнивание текста по умолчанию

Для отдельных тэгов нужно указать, что это блоки(для старых браузеров)

body
line-height  1.2( междустрочный интервал)

Списки:
Нумерованный
padding-left 1.4em
list-style decimal
Маркированный
padding-left 1.4em
list-style square

Таблица
border-collapse collapse(не толстая граница между ячейками)
border-spacing 0(нет рамки вокруг всей таблицы)

Работа со шрифтами:
1) font-family - указывает список шрифтов, которые будут использованы. Если шрифта нет, то используется следующий из списка
2) font-size - размер шрифта
4) color - цвет текста
5) background-color - цвет фона, если без color, то можно использовать изображения
6) text-transform - указывает регистр
7) font-variant - определяет, как нужно представлять строчные буквы — оставить их без модификаций или делать их все прописными уменьшенного размера. Такой способ изменения символов называется капителью
8) text-decoration - различные вариации отображения теста, например подчёркивание
9) letter-spacing - расстояние между символами(как увеличить, так и уменьшить)
10) word-spacing - расстояние между словами(как увеличить, так и уменьшить)
11) text-shadow - тень текста, есть генераторы тени(сайты). <горизонтальный отступ> <вертикальный отступ> <размытость(в пискселях)> <цвет>
12) line-height - междустрочный интервал
13) text-align - выравнивание текста
14) test-indent - отступ первой строки
15) Разбор отступов, margin - внешние, а padding - внутренние
16) Псевдоэлемент first-letter - первая буква в тексте
17) Свойства списков:
    1) list-style-type - тип маркера/нумерации(можно из нумерованного списка сделать маркированный)
    2) list-style-position - смещение списка от левой границы, позволяет меньше использовать margin
    3) list-style-image - сменить маркеры на пользовательские

Каждый элемент или блочный, или строчный. Внутрь блочного можно вложить и блочный, и строчный элементы, а в строчный ничего вложить нельзя

Отступы
1) padding - отступ внутри элемента/блока
2) margin - отступ вне элемента/блока
Между элементами есть стартовые отступы, которые не превышают обычно 20px
Отступы не суммируются, берётся больший
Отступы могут быть отрицательными, если отрицательный, то он вычитается из стартового

Разница между блочными и строчными элементами:
Блок занимает полные блоки на странице, до конца страницы, у них разнится только высота, строчных может быть несколько в одной строке
Отступы работают по разному. У строчного элемента нет отступов сверху и снизу. Чтобы заработало, нужно довить в css display: inline-block(сказать системе, что с ним нужно работать как с блоком)

Границы
1) border - граница, задаём разные свойства: толщина, тип, цвет
Можно задавать с какой стороны граница

Cкругление углов:
1) border-radius - скругление углов у границы элемента, задаётся ко: всем, к каждому отдельно(начиная с левого верхнего), <горизонталь>/<вертикаль>(для элипсов)
2) box-shadow - тень блока (<куда направлена, не обязательная часть> <горизонтальная длина> <вертикальная длина> <размытие> <цвет>)/нагружает страницу

Высота/ширина:
1) width - ширина конкретного блока
2) height - высота конкретного блока
Важно помнить, что у всех разные экраны, поэтому всё будет работать по-своему на других устройствах
Также на ширину влияют отступы, толщины линий и т.д.
3) box-sizing - для упращения работы с размерами. content-box, устанавливается по умолчанию = ширина + padding + margin, padding-box = ширина + padding, border-box = всё, что влияет на ширину элемента
Не задавать высоту тем элементам, где нет точныхх размеров
4) overflow - работа с ошибками в размерах. visible - по-умолчанию, просто показать контент, ломает дизайн, scroll - прокрутка, но лучше использовать auto, hidden - скрыть непоместивщийся контент
5) max-<> - максимальный указанный размер
6) min-<> - минимальный уразанный размер

Обтекание блоков на странице
1) float - задать прикрипление, якорь, обтекание происходит с противоположной стороны(есть если есть место, то другой контент может занять свободное пространство).
Если для контента не задан float, то он игнорирует элементы с заданным.
2) clear - сбросить обтекание: слева, справа, с двух сторон

Работа с графикой на сайте
Добавлять изображение на фон можно с помощью абсолютного пути и относительного(предпочтительней)

Как происходит работа с фоном
Если изображение меньше страницы, то оно будет повторяться, пока не заполнит всю страницу
Типы, которые поддерживаются jpg, gif, png, SVG
background-repeat: <no-repeat, repeat-x, repeat-y, repeat> - управление повтором
background-position: <>/<left border> <top border> - разбить страницу на 9 прямоугольников, и выбрать куда поместить изображение/два значение отступа от указанной границы
background-attachment: fixed - закрепляет фон сверху страницы
background-origin: <> - управление положением внутри элемента, например как работает с отступами
background-size: <> <> - управление размерами изображения
background: <url(...)> <position> <position> </> <size> <repeat> <attachment> <color>
Можно указать несколько изображений, через запятую. Накладываются друг на друга

Линейный градиент
background-image: linear-gradient(<to ...>/<...deg>, <first color>, <second color>)
Если задать доп. свойство transparent, то будет видно второй, третий и т.д. градиенты

Радиальный градиент
background-image: radial-gradient(<not necessary, circle>/<not necessary, circle at <> <>>, <center color>, <radial color>)

Горизонтальное и вертикальное меню
Можно подменять ту часть изображения, которую видим после обрезки
span.button2{
	position: relative;
	background-position: left top;
	width: 25px;
	height: 34px;
	background-repeat: no-repeat;
	background-origin: content-box;
	display: inline-block;
}
span.button2:hover{
	background-position: left top -34px;
	cursor: pointer;
	background-origin: content-box;
}

Чтобы ссылка срабатывала от нажатия на фон, нужно добавить display: block

Сделать меню горизонтальным:
display: inline у элементов списка
у самой ссылки - display: inline-block

Анимации, переходы и анимация
transform: rotate(...deg) - поворот элемента на указанное число градусов
для разных браузеров можно добавлять разные префиксы
transform: scale(...) - масштаб

Большинство переходов обычных делаем при помощи псевдоклассов
замедление, плавность через
transition-property: <нужное свойство>, ...;
transition-duration: <время на анимацию>, ...;
transition-delay: <время задкржки>, ...;

Page with special symbols:
http://htmlbook.ru/samhtml/tekst/spetssimvoly

Page for check your site:
https://validator.w3.org